package Yoorkin/rabbit-tea/internal/ffi

// Values
const DOM_KEY_LOCATION_LEFT : Int = 0x01

const DOM_KEY_LOCATION_NUMPAD : Int = 0x03

const DOM_KEY_LOCATION_RIGHT : Int = 0x02

const DOM_KEY_LOCATION_STANDARD : Int = 0x00

fn document() -> Document

fn patch(Element) -> Unit

fn window() -> Window

// Types and methods
type ClipboardEvent
impl ClipboardEvent {
  clipboard_data(Self) -> DataTransfer
}

type DataTransfer
impl DataTransfer {
  drop_effect(Self) -> String
  effect_allowed(Self) -> String
  items(Self) -> DataTransferItemList
  set_drog_image(Self, Element, Int, Int) -> Unit
}

type DataTransferItemList
impl DataTransferItemList {
  add(Self, String, String) -> Unit
  clear(Self) -> Unit
  length(Self) -> Int
  op_get(Self, Int) -> Unit
  remove(Self, Int) -> Unit
}

type Document
impl Document {
  create_document_fragment(Self) -> DocumentFragment
  create_element(Self, String) -> Element
  create_text_node(Self, String) -> Element
  get_element_by_id(Self, String) -> Element
  to_node(Self) -> Node
}

type DocumentFragment
impl DocumentFragment {
  to_node(Self) -> Node
}

type Element
impl Element {
  append_children(Self, Self) -> Unit
  count_children(Self) -> Int
  get_attribute(Self, String) -> String
  get_children(Self, Int) -> Self
  get_property(Self, String) -> String
  remove_attribute(Self, String) -> Unit
  remove_children(Self, Self) -> Unit
  remove_property(Self, String) -> Unit
  remove_style(Self, String) -> Unit
  scroll_into_view(Self) -> Unit
  set_attribute(Self, String, String) -> Unit
  set_inner_html(Self, String) -> Unit
  set_property(Self, String, String) -> Unit
  set_style(Self, String, String) -> Unit
  to_node(Self) -> Node
}

type Event
impl Event {
  prevent_default(Self) -> Unit
  stop_propagation(Self) -> Unit
  target(Self) -> EventTarget
  to_clipboard_event(Self) -> KeyboardEvent
  to_ui_event(Self) -> UIEvent
}

type EventTarget
impl EventTarget {
  add_event_listener(Self, String, (Event) -> Unit) -> Unit
  dispatch_event(Self, Event) -> Unit
  remove_event_listener(Self, String, (Event) -> Unit) -> Unit
  value(Self) -> String
}

type FocusEvent
impl FocusEvent {
  related_target(Self) -> EventTarget
}

type InputEvent
impl InputEvent {
  data(Self) -> String
  input_type(Self) -> String
  is_composing(Self) -> Bool
}

type KeyboardEvent
impl KeyboardEvent {
  alt_key(Self) -> Bool
  code(Self) -> String
  ctrl_key(Self) -> Bool
  is_composing(Self) -> Bool
  key(Self) -> String
  location(Self) -> Int
  meta_key(Self) -> Bool
  repeat(Self) -> Bool
  shift_key(Self) -> Bool
}

type MouseEvent
impl MouseEvent {
  client_x(Self) -> Int
  client_y(Self) -> Int
  offset_x(Self) -> Int
  offset_y(Self) -> Int
  screen_x(Self) -> Int
  screen_y(Self) -> Int
}

type Node
impl Node {
  append_child(Self, Self) -> Unit
  count_child(Self) -> Int
  first_child(Self) -> Self
  insert_before(Self, Self, Self) -> Unit
  is_null(Self) -> Bool
  last_child(Self) -> Self
  next_sibling(Self) -> Self
  node_name(Self) -> String
  node_type(Self) -> Int
  node_value(Self) -> String
  nth_child(Self, Int) -> Self
  parent_node(Self) -> Self
  previous_sibling(Self) -> Self
  print_node(Self) -> Unit
  remove_child(Self, Self) -> Unit
  replace_child(Self, Self, Self) -> Unit
  to_document(Self) -> Document
  to_document_fragment(Self) -> DocumentFragment
  to_element(Self) -> Element
  to_event_target(Self) -> EventTarget
  to_text(Self) -> Text
}

type Text
impl Text {
  to_node(Self) -> Node
}

type UIEvent
impl UIEvent {
  to_event(Self) -> Event
  to_focus_event(Self) -> MouseEvent
  to_input_event(Self) -> MouseEvent
  to_keyboard_event(Self) -> KeyboardEvent
  to_mouse_event(Self) -> MouseEvent
}

type Window
impl Window {
  current_url(Self) -> String
  history_go_back(Self) -> Unit
  history_go_forward(Self) -> Unit
  load_url(Self, String) -> Unit
  push_url(Self, String) -> Unit
  reload_url(Self) -> Unit
  replace_url(Self, String) -> Unit
  request_animination_frame(Self, () -> Unit) -> Unit
  scroll_by(Self, Int, Int) -> Unit
  scroll_to(Self, Int, Int) -> Unit
  scroll_to_bottom(Self) -> Unit
  scroll_to_top(Self) -> Unit
  to_event_target(Self) -> EventTarget
}

// Type aliases
pub typealias Listener = (Event) -> Unit

// Traits

