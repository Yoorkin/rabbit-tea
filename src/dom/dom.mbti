package "Yoorkin/rabbit-tea/dom"

import(
  "rami3l/js-ffi/js"
)

// Values
const DOM_KEY_LOCATION_LEFT : Int = 0x01

const DOM_KEY_LOCATION_NUMPAD : Int = 0x03

const DOM_KEY_LOCATION_RIGHT : Int = 0x02

const DOM_KEY_LOCATION_STANDARD : Int = 0x00

fn document() -> Document

fn window() -> Window

// Types and methods
type CanvasGradient
fn CanvasGradient::add_color_stop(Self, Double, String) -> Unit
impl @js.Cast for CanvasGradient

type CanvasLineCap

type CanvasLineJoin

type CanvasPattern
fn CanvasPattern::set_transform(Self, @js.Optional[DOMMatrix2DInit]) -> Unit
impl @js.Cast for CanvasPattern

type CanvasRenderingContext2D
fn CanvasRenderingContext2D::arc(Self, Double, Double, Double, Double, Double, anticlockwise~ : Bool = ..) -> Unit
fn CanvasRenderingContext2D::arc_to(Self, Double, Double, Double, Double, Double) -> Unit
fn CanvasRenderingContext2D::begin_path(Self) -> Unit
fn CanvasRenderingContext2D::bezier_curve_to(Self, Double, Double, Double, Double, Double, Double) -> Unit
fn CanvasRenderingContext2D::clear_rect(Self, Double, Double, Double, Double) -> Unit
fn CanvasRenderingContext2D::clip(Self, fill_rule~ : String = ..) -> Unit
fn CanvasRenderingContext2D::clip_with_path(Self, Path2D, fill_rule~ : String = ..) -> Unit
fn CanvasRenderingContext2D::close_path(Self) -> Unit
fn CanvasRenderingContext2D::create_image_data(Self, Double, Double, settings~ : @js.Optional[ImageDataSettings] = ..) -> ImageData
fn CanvasRenderingContext2D::create_image_data_with_data(Self, ImageData) -> ImageData
fn CanvasRenderingContext2D::create_linear_gradient(Self, Double, Double, Double, Double) -> CanvasGradient
fn CanvasRenderingContext2D::create_radial_gradient(Self, Double, Double, Double, Double, Double, Double) -> CanvasGradient
fn CanvasRenderingContext2D::draw_image(Self, @js.Union7[HTMLImageElement, SVGImageElement, HTMLVideoElement, HTMLCanvasElement, ImageBitmap, OffscreenCanvas, VideoFrame], Double, Double) -> Unit
fn CanvasRenderingContext2D::draw_image_with_size(Self, @js.Union7[HTMLImageElement, SVGImageElement, HTMLVideoElement, HTMLCanvasElement, ImageBitmap, OffscreenCanvas, VideoFrame], Double, Double, Double, Double) -> Unit
fn CanvasRenderingContext2D::draw_image_with_src_and_dst_size(Self, @js.Union7[HTMLImageElement, SVGImageElement, HTMLVideoElement, HTMLCanvasElement, ImageBitmap, OffscreenCanvas, VideoFrame], Double, Double, Double, Double, Double, Double, Double, Double) -> Unit
fn CanvasRenderingContext2D::ellipse(Self, Double, Double, Double, Double, Double, Double, Double, anticlockwise~ : Bool = ..) -> Unit
fn CanvasRenderingContext2D::fill(Self, fill_rule~ : String = ..) -> Unit
fn CanvasRenderingContext2D::fill_path(Self, Path2D, fill_rule~ : String = ..) -> Unit
fn CanvasRenderingContext2D::fill_rect(Self, Double, Double, Double, Double) -> Unit
fn CanvasRenderingContext2D::fill_text(Self, String, Double, Double, max_width~ : @js.Optional[Double] = ..) -> Unit
fn CanvasRenderingContext2D::get_fill_style(Self) -> @js.Union3[String, CanvasGradient, CanvasPattern]
fn CanvasRenderingContext2D::get_font(Self) -> String
fn CanvasRenderingContext2D::get_image_data(Self, Double, Double, Double, Double, settings~ : @js.Optional[ImageDataSettings] = ..) -> ImageData
fn CanvasRenderingContext2D::get_image_smoothing_quality(Self) -> String
fn CanvasRenderingContext2D::get_line_cap(Self) -> CanvasLineCap
fn CanvasRenderingContext2D::get_line_join(Self) -> CanvasLineJoin
fn CanvasRenderingContext2D::get_line_with(Self) -> Double
fn CanvasRenderingContext2D::get_stroke_style(Self) -> @js.Union3[String, CanvasGradient, CanvasPattern]
fn CanvasRenderingContext2D::image_smoothing_enabled(Self) -> Bool
fn CanvasRenderingContext2D::is_context_lost(Self) -> Bool
fn CanvasRenderingContext2D::is_point_in_path(Self, Double, Double, fill_rule~ : String = ..) -> Bool
fn CanvasRenderingContext2D::is_point_in_path_with_path(Self, Path2D, Double, Double, fill_rule~ : String = ..) -> Bool
fn CanvasRenderingContext2D::is_point_in_stroke(Self, Double, Double) -> Bool
fn CanvasRenderingContext2D::is_point_in_stroke_with_path(Self, Path2D, Double, Double) -> Bool
fn CanvasRenderingContext2D::line_to(Self, Double, Double) -> Unit
fn CanvasRenderingContext2D::move_to(Self, Double, Double) -> Unit
fn CanvasRenderingContext2D::put_image_data(Self, ImageData, Int, Int) -> Unit
fn CanvasRenderingContext2D::put_image_data_with_dirty(Self, ImageData, Int, Int, Int, Int, Int, Int) -> Unit
fn CanvasRenderingContext2D::quardratic_curve_to(Self, Double, Double, Double, Double) -> Unit
fn CanvasRenderingContext2D::rect(Self, Double, Double, Double, Double) -> Unit
fn CanvasRenderingContext2D::reset(Self) -> Unit
fn CanvasRenderingContext2D::reset_transform(Self) -> Unit
fn CanvasRenderingContext2D::restore(Self) -> Unit
fn CanvasRenderingContext2D::rotate(Self, Double) -> Unit
fn CanvasRenderingContext2D::round_rect(Self, Double, Double, Double, Double, Double) -> Unit
fn CanvasRenderingContext2D::save(Self) -> Unit
fn CanvasRenderingContext2D::scale(Self, Double, Double) -> Unit
fn CanvasRenderingContext2D::set_fill_style(Self, @js.Union3[String, CanvasGradient, CanvasPattern]) -> Unit
fn CanvasRenderingContext2D::set_font(Self, String) -> Unit
fn CanvasRenderingContext2D::set_image_smoothing_quality(Self, String) -> Unit
fn CanvasRenderingContext2D::set_line_cap(Self, CanvasLineCap) -> Unit
fn CanvasRenderingContext2D::set_line_join(Self, CanvasLineJoin) -> Unit
fn CanvasRenderingContext2D::set_line_width(Self, Double) -> Unit
fn CanvasRenderingContext2D::set_stroke_style(Self, @js.Union3[String, CanvasGradient, CanvasPattern]) -> Unit
fn CanvasRenderingContext2D::set_transform(Self, Double, Double, Double, Double, Double, Double) -> Unit
fn CanvasRenderingContext2D::stroke(Self) -> Unit
fn CanvasRenderingContext2D::stroke_rect(Self, Double, Double, Double, Double) -> Unit
fn CanvasRenderingContext2D::stroke_text(Self, String, Double, Double, max_width~ : @js.Optional[Double] = ..) -> Unit
fn CanvasRenderingContext2D::stroke_with_path(Self, Path2D) -> Unit
fn CanvasRenderingContext2D::transform(Self, Double, Double, Double, Double, Double, Double) -> Unit
fn CanvasRenderingContext2D::translate(Self, Double, Double) -> Unit
impl @js.Cast for CanvasRenderingContext2D

#external
pub type Clipboard
fn Clipboard::read_text(Self) -> @js.Promise
fn Clipboard::write_text(Self, String) -> @js.Promise

type ClipboardEvent
fn ClipboardEvent::clipboard_data(Self) -> DataTransfer

type DOMMatrix2DInit

type DOMRect
fn DOMRect::get_bottom(Self) -> Double
fn DOMRect::get_height(Self) -> Double
fn DOMRect::get_left(Self) -> Double
fn DOMRect::get_right(Self) -> Double
fn DOMRect::get_top(Self) -> Double
fn DOMRect::get_width(Self) -> Double
fn DOMRect::get_x(Self) -> Double
fn DOMRect::get_y(Self) -> Double

type DataTransfer
fn DataTransfer::drop_effect(Self) -> String
fn DataTransfer::effect_allowed(Self) -> String
fn DataTransfer::items(Self) -> DataTransferItemList
fn DataTransfer::set_drog_image(Self, Element, Int, Int) -> Unit

type DataTransferItemList
fn DataTransferItemList::add(Self, String, String) -> Unit
fn DataTransferItemList::clear(Self) -> Unit
fn DataTransferItemList::length(Self) -> Int
fn DataTransferItemList::op_get(Self, Int) -> Unit
fn DataTransferItemList::remove(Self, Int) -> Unit

type Document
fn Document::create_document_fragment(Self) -> DocumentFragment
fn Document::create_element(Self, String) -> Element
fn Document::create_text_node(Self, String) -> Element
fn Document::get_element_by_id(Self, String) -> @js.Nullable[Element]
fn Document::get_elements_by_class_name(Self, String) -> HTMLCollection
fn Document::get_elements_by_name(Self, String) -> NodeList
fn Document::get_elements_by_tag_name(Self, String) -> HTMLCollection
fn Document::get_elements_by_tag_name_ns(Self, String, String) -> HTMLCollection
fn Document::query_selector(Self, String) -> @js.Nullable[Element]
fn Document::query_selector_all(Self, String) -> NodeList
fn Document::to_node(Self) -> Node

type DocumentFragment
fn DocumentFragment::to_node(Self) -> Node

type Element
fn Element::append_children(Self, Self) -> Unit
fn Element::children(Self) -> Array[Self]
fn Element::get_attribute(Self, String) -> String
fn Element::get_bounding_client_rect(Self) -> DOMRect
fn Element::get_property(Self, String) -> String
fn Element::get_scroll_height(Self) -> Double
fn Element::get_scroll_left(Self) -> Double
fn Element::get_scroll_top(Self) -> Double
fn Element::get_scroll_width(Self) -> Double
fn Element::remove_attribute(Self, String) -> Unit
fn Element::remove_children(Self, Self) -> Unit
fn Element::remove_property(Self, String) -> Unit
fn Element::scroll_into_view(Self) -> Unit
fn Element::set_attribute(Self, String, String) -> Unit
fn Element::set_inner_html(Self, String) -> Unit
fn Element::set_property(Self, String, @js.Value) -> Unit
fn Element::set_scroll_left(Self, Double) -> Unit
fn Element::set_scroll_top(Self, Double) -> Unit
fn Element::to_html_element(Self) -> @js.Nullable[HTMLElement]
fn Element::to_node(Self) -> Node

type Event
fn Event::prevent_default(Self) -> Unit
fn Event::stop_propagation(Self) -> Unit
fn Event::target(Self) -> EventTarget
fn Event::to_clipboard_event(Self) -> @js.Nullable[KeyboardEvent]
fn Event::to_ui_event(Self) -> @js.Nullable[UIEvent]

type EventTarget
fn EventTarget::add_event_listener(Self, String, (Event) -> Unit) -> Unit
fn EventTarget::dispatch_event(Self, Event) -> Unit
fn EventTarget::remove_event_listener(Self, String, (Event) -> Unit) -> Unit
fn EventTarget::to_clipboard(Self) -> @js.Nullable[Clipboard]
fn EventTarget::to_node(Self) -> @js.Nullable[Node]

type FocusEvent
fn FocusEvent::related_target(Self) -> EventTarget

type GPUCanvasContext

type HTMLCanvasElement
fn HTMLCanvasElement::get_context(Self, String) -> @js.Union5[CanvasRenderingContext2D, ImageBitmapRenderingContext, WebGLRenderingContext, WebGL2RenderingContext, GPUCanvasContext]
fn HTMLCanvasElement::get_height(Self) -> Int
fn HTMLCanvasElement::get_width(Self) -> Int
fn HTMLCanvasElement::to_html_element(Self) -> HTMLElement

type HTMLCollection
fn HTMLCollection::get_length(Self) -> Double
fn HTMLCollection::item(Self, Double) -> @js.Nullable[Element]
fn HTMLCollection::named_item(Self, String) -> @js.Nullable[Element]

type HTMLDialogElement
fn HTMLDialogElement::close(Self, return_value~ : @js.Optional[String] = ..) -> Unit
fn HTMLDialogElement::open(Self) -> Bool
fn HTMLDialogElement::request_close(Self, return_value~ : @js.Optional[String] = ..) -> Unit
fn HTMLDialogElement::return_value(Self) -> String
fn HTMLDialogElement::show(Self) -> Unit
fn HTMLDialogElement::show_modal(Self) -> Unit

type HTMLElement
fn HTMLElement::remove_style(Self, String) -> Unit
fn HTMLElement::set_style(Self, String, String) -> Unit
fn HTMLElement::to_element(Self) -> Element
fn HTMLElement::to_html_canvas_element(Self) -> @js.Nullable[HTMLCanvasElement]
fn HTMLElement::to_html_dialog_element(Self) -> @js.Nullable[HTMLDialogElement]
fn HTMLElement::to_html_image_element(Self) -> @js.Nullable[HTMLImageElement]
fn HTMLElement::to_html_input_element(Self) -> @js.Nullable[HTMLInputElement]
fn HTMLElement::to_html_select_element(Self) -> @js.Nullable[HTMLSelectElement]

type HTMLImageElement
fn HTMLImageElement::get_alt(Self) -> String
fn HTMLImageElement::get_complete(Self) -> Bool
fn HTMLImageElement::get_cross_origin(Self) -> String
fn HTMLImageElement::get_current_src(Self) -> String
fn HTMLImageElement::get_decoding(Self) -> String
fn HTMLImageElement::get_height(Self) -> Double
fn HTMLImageElement::get_is_map(Self) -> Bool
fn HTMLImageElement::get_loading(Self) -> String
fn HTMLImageElement::get_natural_height(Self) -> Double
fn HTMLImageElement::get_natural_width(Self) -> Double
fn HTMLImageElement::get_referrer_policy(Self) -> String
fn HTMLImageElement::get_sizes(Self) -> String
fn HTMLImageElement::get_src(Self) -> String
fn HTMLImageElement::get_srcset(Self) -> String
fn HTMLImageElement::get_use_map(Self) -> String
fn HTMLImageElement::get_width(Self) -> Double
fn HTMLImageElement::get_x(Self) -> Double
fn HTMLImageElement::get_y(Self) -> Double
fn HTMLImageElement::new() -> Self
fn HTMLImageElement::new_with_size(Double, Double) -> Self
fn HTMLImageElement::set_alt(Self, String) -> Unit
fn HTMLImageElement::set_cross_origin(Self, String) -> Unit
fn HTMLImageElement::set_decoding(Self, String) -> Unit
fn HTMLImageElement::set_height(Self, Double) -> Unit
fn HTMLImageElement::set_is_map(Self, Bool) -> Unit
fn HTMLImageElement::set_loading(Self, String) -> Unit
fn HTMLImageElement::set_natural_height(Self, Double) -> Unit
fn HTMLImageElement::set_natural_width(Self, Double) -> Unit
fn HTMLImageElement::set_referrer_policy(Self, String) -> Unit
fn HTMLImageElement::set_sizes(Self, String) -> Unit
fn HTMLImageElement::set_src(Self, String) -> Unit
fn HTMLImageElement::set_srcset(Self, String) -> Unit
fn HTMLImageElement::set_use_map(Self, String) -> Unit
fn HTMLImageElement::set_width(Self, Double) -> Unit

type HTMLInputElement
fn HTMLInputElement::value(Self) -> String

type HTMLSelectElement
fn HTMLSelectElement::value(Self) -> String

type HTMLVideoElement

type ImageBitmap

type ImageBitmapRenderingContext

type ImageData
fn ImageData::get_color_space(Self) -> String
fn ImageData::get_data(Self) -> Uint8ClampedArray
fn ImageData::get_height(Self) -> Int
fn ImageData::get_width(Self) -> Int
fn ImageData::new(Int, Int, @js.Optional[ImageDataSettings]) -> Self
fn ImageData::new_with_data(Uint8ClampedArray, Int, Int, settings~ : @js.Optional[ImageDataSettings] = ..) -> Self

type ImageDataSettings
fn ImageDataSettings::new(String) -> Self

type InputEvent
fn InputEvent::data(Self) -> String
fn InputEvent::input_type(Self) -> String
fn InputEvent::is_composing(Self) -> Bool

type KeyboardEvent
fn KeyboardEvent::alt_key(Self) -> Bool
fn KeyboardEvent::code(Self) -> String
fn KeyboardEvent::ctrl_key(Self) -> Bool
fn KeyboardEvent::is_composing(Self) -> Bool
fn KeyboardEvent::key(Self) -> String
fn KeyboardEvent::location(Self) -> Int
fn KeyboardEvent::meta_key(Self) -> Bool
fn KeyboardEvent::repeat(Self) -> Bool
fn KeyboardEvent::shift_key(Self) -> Bool

type MouseEvent
fn MouseEvent::alt_key(Self) -> Bool
fn MouseEvent::client_x(Self) -> Int
fn MouseEvent::client_y(Self) -> Int
fn MouseEvent::ctrl_key(Self) -> Bool
fn MouseEvent::meta_key(Self) -> Bool
fn MouseEvent::offset_x(Self) -> Int
fn MouseEvent::offset_y(Self) -> Int
fn MouseEvent::screen_x(Self) -> Int
fn MouseEvent::screen_y(Self) -> Int
fn MouseEvent::shift_key(Self) -> Bool

#external
pub type Navigator
fn Navigator::clipboard(Self) -> Clipboard

type Node
fn Node::append_child(Self, Self) -> Unit
fn Node::count_child(Self) -> Int
fn Node::first_child(Self) -> Self
fn Node::insert_before(Self, Self, Self) -> Unit
fn Node::last_child(Self) -> Self
fn Node::next_sibling(Self) -> Self
fn Node::node_name(Self) -> String
fn Node::node_type(Self) -> Int
fn Node::node_value(Self) -> String
fn Node::nth_child(Self, Int) -> Self
fn Node::parent_node(Self) -> Self
fn Node::previous_sibling(Self) -> Self
fn Node::remove_child(Self, Self) -> Unit
fn Node::replace_child(Self, Self, Self) -> Unit
fn Node::to_document(Self) -> @js.Nullable[Document]
fn Node::to_document_fragment(Self) -> @js.Nullable[DocumentFragment]
fn Node::to_element(Self) -> @js.Nullable[Element]
fn Node::to_event_target(Self) -> EventTarget
fn Node::to_text(Self) -> @js.Nullable[Text]

type NodeList
fn NodeList::get_length(Self) -> Double
fn NodeList::item(Self, Double) -> @js.Nullable[Node]

type OffscreenCanvas

type Path2D
fn Path2D::add_path(Self, Self, transform~ : @js.Optional[DOMMatrix2DInit] = ..) -> Unit
fn Path2D::new(path~ : @js.Optional[@js.Union2[Self, String]] = ..) -> Self

type SVGImageElement

type Text
fn Text::to_node(Self) -> Node

type UIEvent
fn UIEvent::to_event(Self) -> Event
fn UIEvent::to_focus_event(Self) -> @js.Nullable[MouseEvent]
fn UIEvent::to_input_event(Self) -> @js.Nullable[MouseEvent]
fn UIEvent::to_keyboard_event(Self) -> @js.Nullable[KeyboardEvent]
fn UIEvent::to_mouse_event(Self) -> @js.Nullable[MouseEvent]

type Uint8ClampedArray

type VideoFrame

type WebGL2RenderingContext

type WebGLRenderingContext

type Window
fn Window::alert(Self, String) -> Unit
fn Window::cancel_animation_frame(Self, Double) -> Unit
fn Window::confirm(Self, String) -> Bool
fn Window::current_url(Self) -> String
fn Window::history_go_back(Self) -> Unit
fn Window::history_go_forward(Self) -> Unit
fn Window::load_url(Self, String) -> Unit
fn Window::navigator(Self) -> Navigator
fn Window::push_url(Self, String) -> Unit
fn Window::reload_url(Self) -> Unit
fn Window::replace_url(Self, String) -> Unit
fn Window::request_animation_frame(Self, (Double) -> Unit) -> Double
fn Window::scroll_by(Self, Int, Int) -> Unit
fn Window::scroll_to(Self, Int, Int) -> Unit
fn Window::scroll_to_bottom(Self) -> Unit
fn Window::scroll_to_top(Self) -> Unit
fn Window::to_event_target(Self) -> EventTarget

// Type aliases
pub typealias @js.Union7[HTMLImageElement, SVGImageElement, HTMLVideoElement, HTMLCanvasElement, ImageBitmap, OffscreenCanvas, VideoFrame] as ImageUnion

pub typealias (Event) -> Unit as Listener

pub typealias String as PredefinedColorSpace

// Traits

